name: Update Apps Metadata

on:
  push:
    paths:
      - 'apps/**'
  pull_request:
    paths:
      - 'apps/**'
  workflow_dispatch:

jobs:
  update-metadata:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Pillow
          pip install pathlib

      - name: Update apps.json
        run: python .github/scripts/update_metadata.py

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create app data archive
        run: |
          # Create directory structure
          mkdir -p app_data/logos app_data/categories app_data/descriptions
          
          # Process each app directory
          for app_dir in apps/*; do
            if [ -d "$app_dir" ]; then
              app_name=$(basename "$app_dir")
              
              # Handle logos
              if [ -f "$app_dir/logo.png" ]; then
                cp "$app_dir/logo.png" "app_data/logos/${app_name}.png"
              elif [ -f "$app_dir/icon-64.png" ]; then
                cp "$app_dir/icon-64.png" "app_data/logos/${app_name}.png"
              fi
              
              # Handle category files
              if [ -f "$app_dir/category.txt" ]; then
                cp "$app_dir/category.txt" "app_data/categories/${app_name}.txt"
              elif [ -f "$app_dir/category" ]; then
                cp "$app_dir/category" "app_data/categories/${app_name}.txt"
              fi
              
              # Handle description files
              if [ -f "$app_dir/description.txt" ]; then
                cp "$app_dir/description.txt" "app_data/descriptions/${app_name}.txt"
              elif [ -f "$app_dir/description" ]; then
                cp "$app_dir/description" "app_data/descriptions/${app_name}.txt"
              fi
            fi
          done
          
          # Create the unified archive
          zip -r app_data.zip app_data/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app_data.zip
          tag_name: app_data
          name: App Data
          body: Archive containing all app logos, categories, and descriptions
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          git add data/apps.json
          git diff --quiet && git diff --staged --quiet || (
            git commit -m "Update apps metadata"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:$BRANCH_NAME
          )